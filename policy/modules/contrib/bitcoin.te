policy_module(bitcoin,0.1)

########################################
#
# Declarations
#

## <desc>
##      <p>
##      Determine whether bitcoin can bind
##      tcp sockets to all unreserved ports.
##      </p>
## </desc>
gen_tunable(bitcoin_bind_all_unreserved_ports, false)

type bitcoin_t;
type bitcoin_exec_t;
type bitcoin_initrc_exec_t;
type bitcoin_etc_t;
type bitcoin_var_lib_t;
type bitcoin_var_run_t;
type bitcoin_log_t;
type bitcoin_tmp_t;

init_daemon_domain(bitcoin_t, bitcoin_exec_t)
files_type(bitcoin_exec_t)
init_script_file(bitcoin_initrc_exec_t)
files_type(bitcoin_var_lib_t)
files_pid_file(bitcoin_var_run_t)
logging_log_file(bitcoin_log_t)
files_tmp_file(bitcoin_tmp_t)
files_config_file(bitcoin_etc_t)
files_read_etc_runtime_files(bitcoin_t)

domain_type(bitcoin_t)

files_read_etc_runtime_files(bitcoin_t)

miscfiles_read_localization(bitcoin_t)
fs_getattr_xattr_fs(bitcoin_t)
fs_associate(bitcoin_var_lib_t)

allow bitcoin_t bitcoin_tmp_t:file { create_file_perms write_file_perms };
allow bitcoin_t bitcoin_var_lib_t:file { read write append create getattr open unlink rename lock };
allow bitcoin_t bitcoin_log_t:file { read write append create getattr open unlink rename lock };
allow bitcoin_t bitcoin_var_lib_t:dir { create write rmdir read open add_name remove_name search getattr };
allow bitcoin_t bitcoin_etc_t:file read_file_perms;

allow bitcoin_t self:process signal_perms;


allow bitcoin_t bitcoin_log_t:lnk_file read;
allow bitcoin_t bitcoin_var_lib_t:file { read create };

read_lnk_files_pattern(bitcoin_t, bitcoin_etc_t, bitcoin_etc_t);
read_files_pattern(bitcoin_t, bitcoin_etc_t, bitcoin_etc_t);
list_dirs_pattern(bitcoin_t, bitcoin_etc_t, bitcoin_etc_t);

append_files_pattern(bitcoin_t, bitcoin_log_t, bitcoin_log_t)
create_files_pattern(bitcoin_t, bitcoin_log_t, bitcoin_log_t)
setattr_files_pattern(bitcoin_t, bitcoin_log_t, bitcoin_log_t)
manage_sock_files_pattern(bitcoin_t, bitcoin_log_t, bitcoin_log_t)
logging_log_filetrans(bitcoin_t, bitcoin_log_t, { sock_file file dir })

kernel_read_system_state(bitcoin_t)
kernel_read_vm_sysctls(bitcoin_t)

dev_read_sysfs(bitcoin_t)
dev_read_urand(bitcoin_t)
domain_use_interactive_fds(bitcoin_t)
files_read_etc_runtime_files(bitcoin_t)
files_read_usr_files(bitcoin_t)

manage_files_pattern(bitcoin_t, bitcoin_etc_t, bitcoin_etc_t)
filetrans_pattern(bitcoin_t, bitcoin_etc_t, bitcoin_etc_t, file)
can_exec(bitcoin_t, bitcoin_etc_t)

# networking 

# privileges to setup the ports

allow bitcoin_t bitcoin_port_t:tcp_socket { name_connect name_bind };
allow bitcoin_t self:netlink_route_socket { write getattr read bind create nlmsg_read };
allow bitcoin_t self:tcp_socket { connect accept listen };

# dns
auth_use_nsswitch(bitcoin_t)
corenet_sendrecv_dns_server_packets(bitcoin_t)
corenet_udp_bind_dns_port(bitcoin_t)
corenet_udp_sendrecv_dns_port(bitcoin_t)

# a boolean for binding to a non-standard high port

tunable_policy(`bitcoin_bind_all_unreserved_ports',`
        corenet_sendrecv_all_server_packets(bitcoin_t)
        corenet_tcp_bind_all_unreserved_ports(bitcoin_t)
')


# allow usage of the bitcoin tcp ports (8333 + 8332)

corenet_sendrecv_bitcoin_server_packets(bitcoin_t)
corenet_tcp_bind_bitcoin_port(bitcoin_t)
corenet_tcp_sendrecv_bitcoin_port(bitcoin_t)

# allow tcp transit to people's random bitcoin ports 

corenet_tcp_sendrecv_all_ports(bitcoin_t)
corenet_tcp_connect_all_ports(bitcoin_t)

# allow the usage of tcp through network interfaces

corenet_tcp_sendrecv_generic_if(bitcoin_t)
corenet_tcp_bind_generic_node(bitcoin_t)


